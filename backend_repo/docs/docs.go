// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Позволяет пользователю войти в систему, проверяя имя пользователя и пароль",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/base_handlers.AuthBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен успешной авторизации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Неверное имя пользователя или пароль",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка генерации токена",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "description": "Возвращает информацию о пользователе на основе его роли (User, Trainer, Admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Получить информацию о текущем пользователе",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен для аутентификации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.MeResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка: не удалось получить данные из контекста или некорректная роль",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка: внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Получение профиля текущего пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Получить профиль пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Обновление профиля текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Обновить профиль пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления профиля",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/base_handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Регистрирует нового пользователя в системе, создавая учетную запись на основе указанной роли.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации пользователя",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/base_handlers.RegisterBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован. Возвращает токен и идентификатор пользователя.",
                        "schema": {
                            "$ref": "#/definitions/base_handlers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод данных.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при обработке данных (например, ошибка хэширования пароля).",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "503": {
                        "description": "Ошибка сервера при регистрации пользователя.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/subscription/group/schedule": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Получение списка всех групповых занятий",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group Schedule"
                ],
                "summary": "Получить расписание групповых занятий",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/subscription_handler.GroupSession"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Создание нового группового занятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group Schedule"
                ],
                "summary": "Создать новое групповое занятие",
                "parameters": [
                    {
                        "description": "Данные для создания группового занятия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.CreateGroupSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.GroupSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/group/schedule/{id}": {
            "put": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Обновление информации о групповом занятии",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group Schedule"
                ],
                "summary": "Обновить групповое занятие",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID группового занятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления группового занятия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.CreateGroupSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Удаление группового занятия",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group Schedule"
                ],
                "summary": "Удалить групповое занятие",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID группового занятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/group/schedule/{id}/register": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Регистрация пользователя на групповое занятие",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group Schedule"
                ],
                "summary": "Записаться на групповое занятие",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID группового занятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/group/schedule/{id}/unregister": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Отмена регистрации пользователя на групповое занятие",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Group Schedule"
                ],
                "summary": "Отменить запись на групповое занятие",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID группового занятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/membership": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Получение информации о текущем абонементе пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Получить информацию об абонементе",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.Membership"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Создание нового абонемента для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Создать новый абонемент",
                "parameters": [
                    {
                        "description": "Данные для создания абонемента",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.CreateMembershipRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/membership/freeze": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Временная заморозка абонемента пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Заморозить абонемент",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/personal/schedule": {
            "get": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Получение списка персональных тренировок пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Schedule"
                ],
                "summary": "Получить расписание персональных тренировок",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/subscription_handler.PersonalSession"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/personal/schedule/{id}/unregister": {
            "delete": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Отмена регистрации пользователя на персональную тренировку",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Schedule"
                ],
                "summary": "Отменить запись на персональную тренировку",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID персональной тренировки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription/personal/schedule/{trainer_id}/register": {
            "post": {
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Регистрация пользователя на персональную тренировку",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Personal Schedule"
                ],
                "summary": "Записаться на персональную тренировку",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID тренера",
                        "name": "trainer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для записи на тренировку",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.CreatePersonalSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.PersonalSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/subscription_handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/trainer": {
            "put": {
                "description": "Позволяет обновить информацию о тренере",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trainers"
                ],
                "summary": "Обновляет данные тренера",
                "parameters": [
                    {
                        "description": "Информация о тренере для обновления",
                        "name": "trainer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trainer_handlers.trainerUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновление выполнено успешно",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера при обновлении",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Позволяет добавить нового тренера в систему",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trainers"
                ],
                "summary": "Добавление нового тренера",
                "parameters": [
                    {
                        "description": "Данные тренера",
                        "name": "trainer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trainer_handlers.trainerReqHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тренер успешно создан",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании тренера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет тренера по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trainers"
                ],
                "summary": "Удаление тренера",
                "parameters": [
                    {
                        "description": "Идентификатор тренера для удаления",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trainer_handlers.deleteHandler"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Тренер успешно удален",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Тренер не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера при удалении тренера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainers": {
            "get": {
                "description": "Позволяет получить список всех тренеров",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trainers"
                ],
                "summary": "Возвращает список тренеров",
                "responses": {
                    "200": {
                        "description": "Список тренеров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/trainer_handlers.trainerAliace"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка тренеров",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Позволяет добавить нового клиента в систему",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "добавление нового клиента",
                "parameters": [
                    {
                        "description": "Данные клиента",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_handler.userReqHandler"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Клиент успешно создан",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании клиента",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Позволяет получить список всех пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Возвращает список пользователей",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user_handler.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка пользователей",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieves a single user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_handler.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "User"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}/status": {
            "put": {
                "responses": {}
            }
        }
    },
    "definitions": {
        "base_handlers.AuthBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "base_handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "base_handlers.MeResponse": {
            "type": "object",
            "properties": {
                "entity_name": {
                    "type": "string"
                }
            }
        },
        "base_handlers.ProfileResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "base_handlers.RegisterBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "base_handlers.RegisterResponse": {
            "type": "object",
            "properties": {
                "entity_oid": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "base_handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "required": [
                "description",
                "max_participants",
                "min_participants",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isEnable": {
                    "type": "boolean"
                },
                "max_participants": {
                    "type": "integer"
                },
                "min_participants": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "trainers_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "users_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.CreateGroupSessionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "maxClients": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "trainerId": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.CreateMembershipRequest": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.CreatePersonalSessionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "subscription_handler.GroupSession": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maxClients": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trainerId": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.Membership": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "freezeCount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.PersonalSession": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trainerId": {
                    "type": "string"
                }
            }
        },
        "subscription_handler.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                }
            }
        },
        "trainer_handlers.deleteHandler": {
            "type": "object"
        },
        "trainer_handlers.trainerAliace": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Schedule"
                    }
                },
                "specialty": {
                    "type": "string"
                }
            }
        },
        "trainer_handlers.trainerReqHandler": {
            "type": "object"
        },
        "trainer_handlers.trainerUpdateReq": {
            "type": "object"
        },
        "user_handler.UserResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passport": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Schedule"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subscription": {
                    "$ref": "#/definitions/models.Subscription"
                }
            }
        },
        "user_handler.userReqHandler": {
            "description": "Пользователь системы",
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "subscription"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3,
                    "example": "JohnDoe"
                },
                "passport": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "123456"
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                },
                "schedule": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subscription": {
                    "$ref": "#/definitions/models.Subscription"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Fitness API",
	Description:      "API для управления фитнес-приложением",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
