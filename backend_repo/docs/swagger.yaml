openapi: 3.0.0
info:
  title: Fitness Club API
  description: API для управления фитнес-клубом
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Локальный сервер разработки

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Сообщение об ошибке

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [admin, trainer, client]

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time

    Membership:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          type: string
        freezeCount:
          type: integer

    GroupSession:
      type: object
      properties:
        id:
          type: string
        trainerId:
          type: string
        name:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        maxClients:
          type: integer
        status:
          type: string

    PersonalSession:
      type: object
      properties:
        id:
          type: string
        trainerId:
          type: string
        clientId:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
        description:
          type: string

security:
  - bearerAuth: []

paths:
  /api/login:
    post:
      summary: Авторизация пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/register:
    post:
      summary: Регистрация нового пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/profile:
    get:
      summary: Получить профиль пользователя
      tags:
        - Profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Профиль пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Обновить профиль пользователя
      tags:
        - Profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Профиль обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/membership:
    get:
      summary: Получить информацию об абонементе
      tags:
        - Membership
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Информация об абонементе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        '404':
          description: Абонемент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Создать новый абонемент
      tags:
        - Membership
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - startDate
                - endDate
              properties:
                type:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Абонемент создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/group-schedule:
    get:
      summary: Получить расписание групповых занятий
      tags:
        - Group Schedule
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список групповых занятий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupSession'
    post:
      summary: Создать новое групповое занятие
      tags:
        - Group Schedule
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trainerId
                - name
                - startTime
                - endTime
                - maxClients
              properties:
                trainerId:
                  type: string
                name:
                  type: string
                description:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                maxClients:
                  type: integer
      responses:
        '201':
          description: Занятие создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSession'
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/personal-schedule:
    get:
      summary: Получить расписание персональных тренировок
      tags:
        - Personal Schedule
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список персональных тренировок
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalSession'
    post:
      summary: Записаться на персональную тренировку
      tags:
        - Personal Schedule
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - trainerId
                - startTime
                - endTime
              properties:
                trainerId:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                description:
                  type: string
      responses:
        '201':
          description: Запись создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalSession'
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
